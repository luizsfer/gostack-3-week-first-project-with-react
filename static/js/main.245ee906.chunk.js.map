{"version":3,"sources":["assets/github-background.svg","assets/logo.svg","styles/global.ts","services/api.ts","pages/Dashboard/styles.ts","pages/Repository/index.tsx","pages/Dashboard/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","githubBackground","api","axios","create","baseURL","Title","styled","h1","Form","form","props","hasError","css","shade","Error","span","Repositories","div","Repository","Dashboard","useState","newRepo","setNewRepo","inputError","setInputError","storagedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","event","a","preventDefault","get","response","repository","data","useEffect","setItem","stringify","src","logo","alt","onSubmit","value","onChange","e","target","placeholder","type","map","key","full_name","href","owner","avatar_url","login","description","size","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,4mBCI5BC,kBAAf,IAS8BC,K,gECPfC,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,4B,k4DCIJ,IAAMC,EAAQC,IAAOC,GAAV,KAQLC,EAAOF,IAAOG,KAAV,KAcX,SAACC,GAAD,OACAA,EAAMC,UACNC,YADA,OAoBcC,YAAM,GAAK,YAKlBC,EAAQR,IAAOS,KAAV,KAMLC,EAAeV,IAAOW,IAAV,KCvDVC,EAJc,WAC3B,OAAO,2CCsFMC,EAzEa,WAAO,IAAD,EACFC,mBAAS,IADP,mBACzBC,EADyB,KAChBC,EADgB,OAEIF,mBAAS,IAFb,mBAEzBG,EAFyB,KAEbC,EAFa,OAGQJ,oBAAuB,WAC7D,IAAMK,EAAuBC,aAAaC,QACxC,gCAEF,OAAIF,EACKG,KAAKC,MAAMJ,GAEb,MAVuB,mBAGzBK,EAHyB,KAGXC,EAHW,iDAoBhC,WACEC,GADF,iBAAAC,EAAA,yDAGED,EAAME,iBAEDb,EALP,uBAMIG,EAAc,yCANlB,mDAU2BvB,EAAIkC,IAAJ,gBAA6Bd,IAVxD,OAUUe,EAVV,OAWUC,EAAaD,EAASE,KAC5BP,EAAgB,GAAD,mBAAKD,GAAL,CAAmBO,KAClCf,EAAW,IACXE,EAAc,IAdlB,kDAgBIA,EAAc,yCAhBlB,2DApBgC,sBAwChC,OA3BAe,qBAAU,WACRb,aAAac,QACX,+BACAZ,KAAKa,UAAUX,MAEhB,CAACA,IAuBF,oCACE,yBAAKY,IAAKC,IAAMC,IAAI,oBACpB,kBAACvC,EAAD,0CAEA,kBAACG,EAAD,CAAMG,WAAYY,EAAYsB,SA7CF,6CA8C1B,2BACEC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAW0B,EAAEC,OAAOH,QACrCI,YAAY,oCAEd,4BAAQC,KAAK,UAAb,cAED5B,GAAc,kBAACT,EAAD,KAAQS,GACvB,kBAACP,EAAD,KACGc,EAAasB,KAAI,SAACf,GAAD,OAChB,uBAAGgB,IAAKhB,EAAWiB,UAAWC,KAAK,SACjC,yBACEb,IAAKL,EAAWmB,MAAMC,WACtBb,IAAKP,EAAWmB,MAAME,QAExB,6BACE,gCAASrB,EAAWiB,WACpB,2BAAIjB,EAAWsB,cAEjB,kBAAC,IAAD,CAAgBC,KAAM,YCpEnBC,EAPU,kBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW7C,IACjC,kBAAC,IAAD,CAAO2C,KAAK,cAAcE,UAAW9C,MCK1B+C,EARO,kBACpB,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCPJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.245ee906.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-background.0b819d63.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/github-background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box\n  }\n\n  body {\n    background: #F0F0F5 url(${githubBackground}) no-repeat 70% top ;\n    -webkit-font-smoothing: antialiased\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n  max-width: 450px;\n  line-height: 80px;\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n  display: flex;\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n    border: 2px solid #fff;\n    border-right: 0;\n\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n  button {\n    width: 210px;\n    height: 70px;\n    background: #04d361;\n    border-radius: 0 5px 5px 0;\n    border: 0;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#04d361')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin: 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 16px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n","import React from 'react';\n\nconst Repository: React.FC = () => {\n  return <h1>Repository</h1>;\n};\n\nexport default Repository;\n","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport { FiChevronRight } from 'react-icons/fi';\r\nimport api from '../../services/api';\r\nimport logo from '../../assets/logo.svg';\r\nimport { Title, Form, Repositories, Error } from './styles';\r\nimport Repository from '../Repository';\r\n\r\ninterface Repository {\r\n  full_name: string;\r\n  description: string;\r\n  owner: {\r\n    login: string;\r\n    avatar_url: string;\r\n  };\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [newRepo, setNewRepo] = useState('');\r\n  const [inputError, setInputError] = useState('');\r\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\r\n    const storagedRepositories = localStorage.getItem(\r\n      '@GithubExplorer:repositories',\r\n    );\r\n    if (storagedRepositories) {\r\n      return JSON.parse(storagedRepositories);\r\n    }\r\n    return [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      '@GithubExplorer:repositories',\r\n      JSON.stringify(repositories),\r\n    );\r\n  }, [repositories]);\r\n\r\n  async function handleAddRepository(\r\n    event: FormEvent<HTMLFormElement>,\r\n  ): Promise<void> {\r\n    event.preventDefault();\r\n\r\n    if (!newRepo) {\r\n      setInputError('Digite o autor/nome do reposit贸rio');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await api.get<Repository>(`repos/${newRepo}`);\r\n      const repository = response.data;\r\n      setRepositories([...repositories, repository]);\r\n      setNewRepo('');\r\n      setInputError('');\r\n    } catch (err) {\r\n      setInputError('Erro na busca por esse reposit贸rio');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img src={logo} alt=\"Github Explorer\" />\r\n      <Title>Explore reposit贸rios no Github</Title>\r\n\r\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\r\n        <input\r\n          value={newRepo}\r\n          onChange={(e) => setNewRepo(e.target.value)}\r\n          placeholder=\"Digite o nome do reposit贸rio\"\r\n        />\r\n        <button type=\"submit\">Pesquisar</button>\r\n      </Form>\r\n      {inputError && <Error>{inputError}</Error>}\r\n      <Repositories>\r\n        {repositories.map((repository) => (\r\n          <a key={repository.full_name} href=\"teste\">\r\n            <img\r\n              src={repository.owner.avatar_url}\r\n              alt={repository.owner.login}\r\n            />\r\n            <div>\r\n              <strong>{repository.full_name}</strong>\r\n              <p>{repository.description}</p>\r\n            </div>\r\n            <FiChevronRight size={20} />\r\n          </a>\r\n        ))}\r\n      </Repositories>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard} />\n    <Route path=\"/repository\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}